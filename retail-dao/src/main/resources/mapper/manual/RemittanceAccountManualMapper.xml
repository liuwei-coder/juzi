<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzfq.retail.core.dao.manual.RemittanceAccountManualMapper" >
  <resultMap id="BaseResultMap" type="com.jzfq.retail.bean.domain.RemittanceAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 27 16:29:15 CST 2018.
    -->
    <id column="remittanceAccount_id" property="id" jdbcType="INTEGER" />
    <result column="remittanceAccount_account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="remittanceAccount_remark1" property="remark1" jdbcType="VARCHAR" />
    <result column="remittanceAccount_remark2" property="remark2" jdbcType="VARCHAR" />
    <result column="remittanceAccount_remark3" property="remark3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 27 16:29:15 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 27 16:29:15 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 27 16:29:15 CST 2018.
    -->
    remittanceAccount.id as remittanceAccount_id, remittanceAccount.account_name as remittanceAccount_account_name, 
    remittanceAccount.remark1 as remittanceAccount_remark1, remittanceAccount.remark2 as remittanceAccount_remark2, 
    remittanceAccount.remark3 as remittanceAccount_remark3
  </sql>
  <select id="selectList" resultType="java.util.HashMap" parameterType="java.util.HashMap" >
    SELECT
      s.seller_name AS sellerName,
      ra.account_name AS accountName,
      ra.remark1
    FROM
      seller AS s
    LEFT JOIN seller_account AS sa ON s.id = sa.seller_id
    LEFT JOIN remittance_account ra ON ra.id = sa.account_id
    WHERE 1=1
    <if test="sellerName != null" >
       AND s.seller_name like CONCAT('%',#{sellerName},'%')
    </if>
  </select>
</mapper>