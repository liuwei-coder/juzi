<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzfq.retail.core.dao.manual.OrdersBaseManualMapper">

    <resultMap id="BaseResultMap" type="com.jzfq.retail.bean.domain.OrdersBase">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Jun 27 16:29:15 CST 2018.
        -->
        <id column="ordersBase_id" property="id" jdbcType="INTEGER" />
        <result column="ordersBase_order_sn" property="orderSn" jdbcType="VARCHAR" />
        <result column="ordersBase_order_type" property="orderType" jdbcType="INTEGER" />
        <result column="ordersBase_seller_id" property="sellerId" jdbcType="INTEGER" />
        <result column="ordersBase_seller_name" property="sellerName" jdbcType="VARCHAR" />
        <result column="ordersBase_member_id" property="memberId" jdbcType="INTEGER" />
        <result column="ordersBase_member_name" property="memberName" jdbcType="VARCHAR" />
        <result column="ordersBase_order_state" property="orderState" jdbcType="INTEGER" />
        <result column="ordersBase_money_order" property="moneyOrder" jdbcType="DECIMAL" />
        <result column="ordersBase_firstPayRatio" property="firstpayratio" jdbcType="DOUBLE" />
        <result column="ordersBase_downpayment_amount" property="downpaymentAmount" jdbcType="DECIMAL" />
        <result column="ordersBase_monthly_amount" property="monthlyAmount" jdbcType="DECIMAL" />
        <result column="ordersBase_confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_deliver_time" property="deliverTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_finish_time" property="finishTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_product_back_time" property="productBackTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_source" property="source" jdbcType="INTEGER" />
        <result column="ordersBase_codconfirm_remark" property="codconfirmRemark" jdbcType="VARCHAR" />
        <result column="ordersBase_create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_is_full_payment" property="isFullPayment" jdbcType="INTEGER" />
        <result column="ordersBase_picking_time" property="pickingTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_supplier" property="supplier" jdbcType="VARCHAR" />
        <result column="ordersBase_staging_money" property="stagingMoney" jdbcType="DECIMAL" />
        <result column="ordersBase_logistics_name" property="logisticsName" jdbcType="VARCHAR" />
        <result column="ordersBase_logistics_id" property="logisticsId" jdbcType="VARCHAR" />
        <result column="ordersBase_logistics_number" property="logisticsNumber" jdbcType="VARCHAR" />
        <result column="ordersBase_is_del" property="isDel" jdbcType="INTEGER" />
        <result column="ordersBase_codconfirm_time" property="codconfirmTime" jdbcType="TIMESTAMP" />
        <result column="ordersBase_make_user" property="makeUser" jdbcType="VARCHAR" />
        <result column="ordersBase_credit_flag" property="creditFlag" jdbcType="INTEGER" />
        <result column="ordersBase_risk_token" property="riskToken" jdbcType="VARCHAR" />
        <result column="ordersBase_month_ratio" property="monthRatio" jdbcType="DOUBLE" />
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Jun 27 16:29:15 CST 2018.
        -->
        ordersBase.id as ordersBase_id, ordersBase.order_sn as ordersBase_order_sn, ordersBase.order_type as ordersBase_order_type,
        ordersBase.seller_id as ordersBase_seller_id, ordersBase.seller_name as ordersBase_seller_name,
        ordersBase.member_id as ordersBase_member_id, ordersBase.member_name as ordersBase_member_name,
        ordersBase.order_state as ordersBase_order_state, ordersBase.money_order as ordersBase_money_order,
        ordersBase.firstPayRatio as ordersBase_firstPayRatio, ordersBase.downpayment_amount as ordersBase_downpayment_amount,
        ordersBase.monthly_amount as ordersBase_monthly_amount, ordersBase.confirm_time as ordersBase_confirm_time,
        ordersBase.deliver_time as ordersBase_deliver_time, ordersBase.finish_time as ordersBase_finish_time,
        ordersBase.payment_time as ordersBase_payment_time, ordersBase.product_back_time as ordersBase_product_back_time,
        ordersBase.source as ordersBase_source, ordersBase.codconfirm_remark as ordersBase_codconfirm_remark,
        ordersBase.create_time as ordersBase_create_time, ordersBase.update_time as ordersBase_update_time,
        ordersBase.is_full_payment as ordersBase_is_full_payment, ordersBase.picking_time as ordersBase_picking_time,
        ordersBase.supplier as ordersBase_supplier, ordersBase.staging_money as ordersBase_staging_money,
        ordersBase.logistics_name as ordersBase_logistics_name, ordersBase.logistics_id as ordersBase_logistics_id,
        ordersBase.logistics_number as ordersBase_logistics_number, ordersBase.is_del as ordersBase_is_del,
        ordersBase.codconfirm_time as ordersBase_codconfirm_time, ordersBase.make_user as ordersBase_make_user,
        ordersBase.credit_flag as ordersBase_credit_flag, ordersBase.risk_token as ordersBase_risk_token,
        ordersBase.month_ratio as ordersBase_month_ratio
    </sql>

    <select id="findList" resultMap="BaseResultMap" parameterType="com.jzfq.retail.bean.domain.OrdersBase">
        select <include refid="Base_Column_List"/> from orders_base ordersBase
        <where>
            <if test="id!=null">
                ordersBase.id = #{id}
            </if>
            <if test="orderSn!=null">
                ordersBase.order_sn = #{orderSn}
            </if>
            <if test="sellerId!=null">
                ordersBase.seller_id = #{sellerId}
            </if>
        </where>
        order by ordersBase.create_time desc
    </select>

    <select id="findEntityByOrderSN" resultMap="BaseResultMap" parameterType="string">
        select <include refid="Base_Column_List"/> from orders_base ordersBase where ordersBase.order_sn=#{orderSN}
    </select>

    <update id="modifyBySellerId" parameterType="int">
        update orders_base set order_state = 200 where seller_id = #{sellerId}
        and order_state in (100, 110, 120, 130, 140, 150)
    </update>

    <select id="findOrderAndUserList" resultType="map" parameterType="com.jzfq.retail.bean.domain.OrdersBase">
        select o.id, o.seller_id, o.order_state, o.money_order, o.order_sn, u.id_card
        from orders_base o left join orders_user u on o.id = u.order_id where o.seller_id = #{sellerId}
    </select>

    <select id="findByOrderSn" resultType="map" parameterType="string">
        select
        o.id as orderId,
        o.order_sn as orderSn,
        o.seller_id as sellerId,
        o.seller_name as sellerName,
        o.make_user as makeUser,
        o.money_order as moneyOrder,
        DATE_FORMAT(o.create_time,'%Y-%m-%d %H:%i:%s') as createTime,
        c.id as cateId,
        c.name as cateName,
        b.id as brandId,
        b.name as brandName,
        p.product_name as productName,
        p.spec_info as specInfo
        from orders_base o
        left join orders_product p on o.id = p.orders_id
        left join product_cate c on p.product_cate_id = c.id
        left join product_brand b on p.product_brand_id = b.id
        where o.order_sn = #{orderSn}
    </select>

    <select id="findOrderBaseRelatedInfoList" resultType="map" parameterType="com.jzfq.retail.bean.vo.req.OrderListReq">
        SELECT
        ob.order_sn AS orderSn,
        ob.seller_name AS sellerName,
        ob.order_type AS orderType,
        ob.order_state AS orderState,
        ob.money_order AS moneyOrder,
        ob.downpayment_amount AS downpaymentAmount,
        ob.monthly_amount AS monthlyAmount,
        DATE_FORMAT(ob.confirm_time,'%Y-%m-%d %H:%i:%s') as confirmTime,
        DATE_FORMAT(ob.deliver_time,'%Y-%m-%d %H:%i:%s') as deliverTime,
        DATE_FORMAT(ob.picking_time,'%Y-%m-%d %H:%i:%s') as pickingTime,
        ob.supplier,
        ob.logistics_name AS logisticsName,
        ob.logistics_number AS logisticsNumber,
        DATE_FORMAT(ob.finish_time,'%Y-%m-%d %H:%i:%s') as finishTime,
        ob.source,
        ou.`name` AS buyerName,
        ou.mobile,
        ou.remark,
        ou.registe_code AS registeCode,
        ou.invitation_code AS invitationCode,
        ou.user_status AS userStatus,
        ou.show_city AS showCity,
        op.product_name AS productName,
        pc.id AS productCateId,
        pc.`name` AS productCateName,
        pb.id AS productBrandId,
        pb.`name` AS productBrandName,
        op.spec_info AS specInfo,
        op.money_price AS moneyPrice,
        op.number,
        ot.term,
        ot.capital_id AS capitalId
        FROM
        orders_base AS ob
        LEFT JOIN orders_user AS ou ON ob.order_sn = ou.order_sn
        LEFT JOIN orders_product AS op ON op.orders_sn = ob.order_sn
        LEFT JOIN product_brand AS pb ON op.product_brand_id = pb.id
        LEFT JOIN product_cate AS pc ON pc.id = op.product_cate_id
        LEFT JOIN orders_trade AS ot ON ot.order_sn = ob.order_sn
        <where>
            <if test="orderSn != null">
                and ob.order_sn = #{orderSn}
            </if>
            <if test="sellerName != null">
                and ob.seller_name like concat('%',#{sellerName},'%')
            </if>
            <if test="buyerName != null">
                and ou.`name` like concat('%',#{buyerName},'%')
            </if>
            <if test="mobile != null">
                and ou.mobile = #{mobile}
            </if>
            <if test="orderType != null">
                and ob.order_type = #{orderType}
            </if>
            <if test="orderState != null">
                and ob.order_state = #{orderState}
            </if>
            <if test="productName != null">
                and op.product_name like concat('%',#{productName},'%')
            </if>
            <if test="cateName != null">
                and pc.`name` like concat('%',#{cateName},'%')
            </if>
            <if test="brandName != null and brandName !=''">
                and pb.`name` like concat('%',#{brandName},'%')
            </if>
            <if test="showCity != null and showCity != ''">
                and ou.show_city like concat('%',#{showCity},'%')
            </if>
            <if test="source != null">
                and ob.source = #{source}
            </if>
            <if test="confirmTimeBegin!=null">
                and ob.confirm_time &gt;= #{confirmTimeBegin}
            </if>
            <if test="confirmTimeEnd!=null">
                and ob.confirm_time &lt; #{confirmTimeEnd}
            </if>
            <if test="deliverTimeBegin!=null">
                and ob.deliver_time &gt;= #{deliverTimeBegin}
            </if>
            <if test="deliverTimeEnd!=null">
                and ob.deliver_time &lt; #{deliverTimeEnd}
            </if>
        </where>
        ORDER by  ob.confirm_time desc
    </select>

    <select id="findOrderListBySeller" resultType="map">
        select
        o.id as id,
        o.order_sn as orderSn,
        DATE_FORMAT(o.confirm_time,'%Y.%m.%d %H:%i:%s') as confirmTime,
        DATE_FORMAT(o.create_time,'%Y.%m.%d %H:%i:%s') as createTime,
        o.order_state as orderState,
        o.money_order as moneyOrder,
        o.make_user as makeUser,
        o.member_name as memberName,
        op.product_name as productName,
        pt.master_img as masterImg,
        o.order_type as orderType
        from orders_base o
        left join orders_product op on o.order_sn = op.orders_sn
        left join seller s on o.seller_id = s.id
        left join seller_login_permission p on s.id = p.seller_id
        left join product pt on pt.id = op.product_id
        <where>
            <if test="seller != null and seller!=''">
                and p.seller_login = #{seller}
            </if>
            <if test="search!=null and search.status!=null">
                <foreach collection="search.status" item="s" open="and o.order_state in (" separator="," close=")">
                    #{s}
                </foreach>
            </if>
        </where>
        order by o.create_time desc
    </select>

    <select id="findOrderByTackCode" resultType="com.jzfq.retail.bean.vo.res.TakeCodeOrderRes">
        SELECT
          ob.order_sn AS orderSn,
          ou.name AS customerName,
          op.product_name AS goodsName,
          op.number AS goodsAmount
        FROM
        orders_base ob
        LEFT JOIN orders_product op ON ob.order_sn = op.orders_sn
        LEFT JOIN orders_user ou ON ou.order_sn = ob.order_sn
        WHERE ob.order_type = 2 AND ob.order_state in (140,155) AND ob.take_code = #{takeCode} AND ob.seller_id=#{sellerId}
    </select>

    <select id="findOrderListByMember" resultType="map">
        SELECT
        ob.id as orderId,
        ob.order_sn as orderSn,
        ob.order_state as orderState,
        ob.downpayment_amount as downpaymentAmount,
        ob.monthly_amount as monthlyAmount,
        ot.term as term,
        1 as number,
        op.money_price moneyPrice,
        p.name1 as productName,
        p.description as productDescription,
        p.master_middle_img as masterMiddleImg,
        p.master_little_img as masterLittleImg,
        pc.`name` as productCateName,
        pb.`name` as productBrandName,
        s.seller_name as sellerName,
        p.master_img as masterImg,
        ob.take_code as takeCode,
        ob.order_type as orderType
        FROM
        orders_base ob
        LEFT JOIN orders_product op ON ob.order_sn = op.orders_sn
        LEFT JOIN product_cate pc on op.product_cate_id = pc.id
        LEFT JOIN product_brand pb on op.product_brand_id = pb.id
        LEFT JOIN orders_trade ot on ob.order_sn = ot.order_sn
        LEFT JOIN product p on op.product_id = p.id
        LEFT JOIN seller s on ob.seller_id = s.id
        <where>
            <if test="member != null">
                and ob.member_id = #{member}
            </if>
            <if test="status!=null">
                <foreach collection="status" item="s" open="and ob.order_state in (" separator="," close=")">
                    #{s}
                </foreach>
            </if>
        </where>
        order by ob.create_time desc
    </select>

    <select id="countMember" resultType="java.lang.Integer">
        SELECT
          count(DISTINCT ob.member_id)
        FROM
          orders_base ob
        WHERE
            ob.order_state in (130,135,140,150,155,160,170,180)
            AND date_format(ob.create_time, '%Y%m%d') = date_format(NOW(), '%Y%m%d')
    </select>

    <select id="sumOrderMoney" resultType="java.math.BigDecimal">
        SELECT
          SUM(ob.money_order)
        FROM
        orders_base ob
        WHERE
            order_state in (130,135,140,150,155,160,170,180)
            AND date_format(ob.create_time, '%Y%m%d') = date_format(NOW(), '%Y%m%d')
    </select>

    <select id="countEntryOrder" resultType="java.lang.Integer">
        SELECT
          COUNT(0)
        FROM
        orders_base ob
        WHERE
            date_format(ob.create_time, '%Y%m%d') = date_format(NOW(), '%Y%m%d')
    </select>

    <update id="updateCreditFlagById" parameterType="com.jzfq.retail.bean.domain.OrdersBase">
        update orders_base set credit_flag = #{creditFlag} where id = #{id}
    </update>

    <update id="updateRiskTokenById" parameterType="com.jzfq.retail.bean.domain.OrdersBase">
        update orders_base set risk_token = #{riskToken} where id = #{id}
    </update>

    <update id="updateStatusByIds">
        update orders_base set order_state = #{status}, deliver_time = now()
        <where>
            <foreach collection="ordersIds" item="id" open="and id in (" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </update>

    <select id="countNonDeliveryTakeCodeRepeat" resultType="int">
        select count(id) from orders_base where take_code = #{takeCode} and order_state in (140,155) and order_type = 2
    </select>

    <update id="modifyOrderStateByOrderSn" parameterType="com.jzfq.retail.bean.domain.OrdersBase">
        update orders_base set order_state = #{orderState}, codconfirm_time = #{codconfirmTime}, deliver_time = #{deliverTime} where order_sn = #{orderSn}
    </update>

</mapper>