<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzfq.retail.core.dao.manual.SellerTermManualMapper" >
    <resultMap id="BaseResultMap" type="com.jzfq.retail.bean.domain.SellerTerm" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 23 20:00:14 CST 2018.
        -->
        <id column="sellerTerm_id" property="id" jdbcType="INTEGER" />
        <result column="sellerTerm_seller_id" property="sellerId" jdbcType="INTEGER" />
        <result column="sellerTerm_term" property="term" jdbcType="INTEGER" />
        <result column="sellerTerm_month_rate" property="monthRate" jdbcType="DOUBLE" />
        <result column="sellerTerm_after_discount_rate" property="afterDiscountRate" jdbcType="DECIMAL" />
        <result column="sellerTerm_discount" property="discount" jdbcType="DECIMAL" />
        <result column="sellerTerm_sort" property="sort" jdbcType="INTEGER" />
        <result column="sellerTerm_status" property="status" jdbcType="INTEGER" />
        <result column="sellerTerm_create_id" property="createId" jdbcType="INTEGER" />
        <result column="sellerTerm_update_id" property="updateId" jdbcType="INTEGER" />
        <result column="sellerTerm_create_user" property="createUser" jdbcType="VARCHAR" />
        <result column="sellerTerm_update_user" property="updateUser" jdbcType="VARCHAR" />
        <result column="sellerTerm_create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="sellerTerm_update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 23 20:00:14 CST 2018.
        -->
        sellerTerm.id as sellerTerm_id, sellerTerm.seller_id as sellerTerm_seller_id, sellerTerm.term as sellerTerm_term,
        sellerTerm.month_rate as sellerTerm_month_rate, sellerTerm.after_discount_rate as sellerTerm_after_discount_rate,
        sellerTerm.discount as sellerTerm_discount, sellerTerm.sort as sellerTerm_sort, sellerTerm.status as sellerTerm_status,
        sellerTerm.create_id as sellerTerm_create_id, sellerTerm.update_id as sellerTerm_update_id,
        sellerTerm.create_user as sellerTerm_create_user, sellerTerm.update_user as sellerTerm_update_user,
        sellerTerm.create_time as sellerTerm_create_time, sellerTerm.update_time as sellerTerm_update_time
    </sql>

    <select id="findList" resultType="map" parameterType="com.jzfq.retail.bean.vo.req.SellerTermSearchReq">
        SELECT
        st.id AS id,
        s.id AS sellerId,
        s.seller_name AS sellerName,
        st.term AS term,
        st.month_rate AS monthRate,
        st.discount AS discount,
        st.after_discount_rate AS afterDiscountRate
        FROM
        seller_term st
        LEFT JOIN seller s ON st.seller_id = s.id
        <where>
                1=1
            <if test="sellerName!=null">
                and s.seller_name like concat('%',#{sellerName},'%')
            </if>
        </where>
        ORDER BY st.id DESC
    </select>

    <select id="findListBase" resultMap="BaseResultMap" parameterType="com.jzfq.retail.bean.domain.SellerTerm">
        select
        <include refid="Base_Column_List"/>
        from seller_term sellerTerm
        <where>
            1=1
            <if test="id!=null">
                and sellerTerm.id=#{id}
            </if>
            <if test="sellerId!=null">
                and sellerTerm.seller_id=#{sellerId}
            </if>
            <if test="term!=null">
                and sellerTerm.term=#{term}
            </if>
            <if test="monthRate!=null">
                and sellerTerm.month_rate=#{monthRate}
            </if>
            <if test="status!=null">
                and sellerTerm.status=#{status}
            </if>
        </where>
    </select>
    
    <select id="findListBySellerId" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from seller_term sellerTerm
        where sellerTerm.seller_id=#{sellerId} order by sort asc
    </select>

</mapper>