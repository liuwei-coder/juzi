<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzfq.retail.core.dao.manual.SellerCateBrandRelManualMapper" >
  <resultMap id="BaseResultMap" type="com.jzfq.retail.bean.domain.SellerCateBrandRel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 28 10:32:53 CST 2018.
    -->
    <id column="sellerCateBrandRel_id" property="id" jdbcType="INTEGER" />
    <result column="sellerCateBrandRel_seller_id" property="sellerId" jdbcType="INTEGER" />
    <result column="sellerCateBrandRel_cate_id" property="cateId" jdbcType="INTEGER" />
    <result column="sellerCateBrandRel_brand_id" property="brandId" jdbcType="INTEGER" />
    <result column="sellerCateBrandRel_create_id" property="createId" jdbcType="INTEGER" />
    <result column="sellerCateBrandRel_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="sellerCateBrandRel_state" property="state" jdbcType="INTEGER" />
    <result column="sellerCateBrandRel_opt_id" property="optId" jdbcType="INTEGER" />
    <result column="sellerCateBrandRel_opt_time" property="optTime" jdbcType="TIMESTAMP" />
    <result column="sellerCateBrandRel_stop_id" property="stopId" jdbcType="INTEGER" />
    <result column="sellerCateBrandRel_stop_time" property="stopTime" jdbcType="TIMESTAMP" />
    <result column="sellerCateBrandRel_stop_reason" property="stopReason" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 28 10:32:53 CST 2018.
    -->
    sellerCateBrandRel.id as sellerCateBrandRel_id, sellerCateBrandRel.seller_id as sellerCateBrandRel_seller_id, 
    sellerCateBrandRel.cate_id as sellerCateBrandRel_cate_id, sellerCateBrandRel.brand_id as sellerCateBrandRel_brand_id, 
    sellerCateBrandRel.create_id as sellerCateBrandRel_create_id, sellerCateBrandRel.create_time as sellerCateBrandRel_create_time, 
    sellerCateBrandRel.state as sellerCateBrandRel_state, sellerCateBrandRel.opt_id as sellerCateBrandRel_opt_id, 
    sellerCateBrandRel.opt_time as sellerCateBrandRel_opt_time, sellerCateBrandRel.stop_id as sellerCateBrandRel_stop_id, 
    sellerCateBrandRel.stop_time as sellerCateBrandRel_stop_time, sellerCateBrandRel.stop_reason as sellerCateBrandRel_stop_reason
  </sql>

  <select id="findOptList" resultType="map" parameterType="com.jzfq.retail.bean.domain.SellerCateBrandRel">
      select
        rel.id as relId,
        rel.seller_id as sellerId,
        s.name as sellerName,
        rel.cate_id as cateId,
        c.name as cateName,
        rel.brand_id as brandId,
        b.name as brandName,
        rel.create_id as createId,
        rel.create_time as createTime,
        rel.state as state,
        rel.opt_id as optId,
        rel.opt_time as optTime,
        rel.stop_id as stopId,
        rel.stop_time as stopTime,
        rel.stop_reason as stopReason
        from seller_cate_brand_rel rel
        left join seller s on rel.seller_id = s.id
        left join product_cate c on rel.cate_id = c.id
        left join product_brand b on rel.brand_id = b.id
    <where>
      <if test="sellerId != null and sellerId!=''">
        and rel.seller_id = #{sellerId}
      </if>
      <if test="cateId != null and cateId!=''">
        and rel.cate_id = #{cateId}
      </if>
      <if test="brandId != null and brandId!=''">
        and rel.brand_id = #{brandId}
      </if>
      <if test="search!=null and search.state!=null">
        <foreach collection="search.state" item="s" open="and rel.state in (" separator="," close=")">
          #{s}
        </foreach>
      </if>
    </where>
    order by rel.create_time desc
  </select>

  <update id="updateStatusById" parameterType="com.jzfq.retail.bean.domain.SellerCateBrandRel">
        update seller_cate_brand_rel set state = #{state} where id = #{id}
  </update>


  <select id="getSellerCateBrandRelList" resultType="map" parameterType="com.jzfq.retail.bean.vo.req.SellerCateBrandRelSearchReq">
      SELECT
      rel.id AS id,
      rel.seller_id AS sellerId,
      rel.cate_id AS cateId,
      pc.`name` AS cateName,
      rel.brand_id AS brandId,
      pb.`name` AS brandName,
      rel.state AS relState,
      DATE_FORMAT(
      rel.create_time,
      '%Y-%m-%d %H:%i:%s'
      ) createTime,
      s.seller_code AS sellerCode,
      s.seller_name AS sellerName,
      s.seller_title AS sellerTitle,
      s.seller_style AS sellerStyle,
      s.audit_status AS auditStatus,
      su.real_name AS createUser
      FROM
      seller_cate_brand_rel rel
      LEFT JOIN seller s ON rel.seller_id = s.id
      LEFT JOIN product_cate pc ON rel.cate_id = pc.id
      LEFT JOIN product_brand pb ON rel.brand_id = pb.id
      LEFT JOIN sys_user su ON rel.create_id = su.id
    <where>
        1=1
        <if test="sellerTitle != null">
            and s.seller_title like concat('%',#{sellerTitle},'%')
        </if>
        <if test="sellerStyle != null">
            and s.seller_style = #{sellerStyle}
        </if>
        <if test="cateName != null">
            and pc.`name` like concat('%',#{cateName},'%')
        </if>
        <if test="brandName != null">
            and pb.`name` like concat('%',#{brandName},'%')
        </if>
    </where>
      order by rel.id desc
  </select>


    <select id="getSellerCateBrandRelListBySellerId" resultType="map" parameterType="int">
        SELECT
        rel.id AS id,
        rel.seller_id AS sellerId,
        rel.cate_id AS cateId,
        pc.`name` AS cateName,
        rel.brand_id AS brandId,
        pb.`name` AS brandName,
        rel.state AS relState,
        DATE_FORMAT(
        rel.create_time,
        '%Y-%m-%d %H:%i:%s'
        ) createTime,
        s.seller_code AS sellerCode,
        s.seller_name AS sellerName,
        s.seller_style AS sellerStyle,
        s.audit_status AS auditStatus,
        su.real_name AS createUser
        FROM
        seller_cate_brand_rel rel
        LEFT JOIN seller s ON rel.seller_id = s.id
        LEFT JOIN product_cate pc ON rel.cate_id = pc.id
        LEFT JOIN product_brand pb ON rel.brand_id = pb.id
        LEFT JOIN sys_user su ON rel.create_id = su.id
        <where>
            1=1
            <if test="sellerId != null">
                and s.id = #{sellerId}
            </if>
        </where>
        order by rel.id desc
    </select>
</mapper>