package com.jzfq.retail.bean.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PurchaseCollectGoodsQuery {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public PurchaseCollectGoodsQuery() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("purchaseCollectGoods.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("purchaseCollectGoods.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("purchaseCollectGoods.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("purchaseCollectGoods.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdIsNull() {
            addCriterion("purchaseCollectGoods.purchase_collect_id is null");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdIsNotNull() {
            addCriterion("purchaseCollectGoods.purchase_collect_id is not null");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.purchase_collect_id =", value, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdNotEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.purchase_collect_id <>", value, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdGreaterThan(Integer value) {
            addCriterion("purchaseCollectGoods.purchase_collect_id >", value, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.purchase_collect_id >=", value, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdLessThan(Integer value) {
            addCriterion("purchaseCollectGoods.purchase_collect_id <", value, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.purchase_collect_id <=", value, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.purchase_collect_id in", values, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdNotIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.purchase_collect_id not in", values, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.purchase_collect_id between", value1, value2, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andPurchaseCollectIdNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.purchase_collect_id not between", value1, value2, "purchaseCollectId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdIsNull() {
            addCriterion("purchaseCollectGoods.product_goods_id is null");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdIsNotNull() {
            addCriterion("purchaseCollectGoods.product_goods_id is not null");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.product_goods_id =", value, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdNotEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.product_goods_id <>", value, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdGreaterThan(Integer value) {
            addCriterion("purchaseCollectGoods.product_goods_id >", value, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.product_goods_id >=", value, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdLessThan(Integer value) {
            addCriterion("purchaseCollectGoods.product_goods_id <", value, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.product_goods_id <=", value, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.product_goods_id in", values, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdNotIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.product_goods_id not in", values, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.product_goods_id between", value1, value2, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductGoodsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.product_goods_id not between", value1, value2, "productGoodsId");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("purchaseCollectGoods.product_id is null");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("purchaseCollectGoods.product_id is not null");
            return (Criteria) this;
        }

        public Criteria andProductIdEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.product_id =", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.product_id <>", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThan(Integer value) {
            addCriterion("purchaseCollectGoods.product_id >", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.product_id >=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThan(Integer value) {
            addCriterion("purchaseCollectGoods.product_id <", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.product_id <=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.product_id in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.product_id not in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.product_id between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.product_id not between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andProductNameIsNull() {
            addCriterion("purchaseCollectGoods.product_name is null");
            return (Criteria) this;
        }

        public Criteria andProductNameIsNotNull() {
            addCriterion("purchaseCollectGoods.product_name is not null");
            return (Criteria) this;
        }

        public Criteria andProductNameEqualTo(String value) {
            addCriterion("purchaseCollectGoods.product_name =", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameNotEqualTo(String value) {
            addCriterion("purchaseCollectGoods.product_name <>", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameGreaterThan(String value) {
            addCriterion("purchaseCollectGoods.product_name >", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameGreaterThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.product_name >=", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameLessThan(String value) {
            addCriterion("purchaseCollectGoods.product_name <", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameLessThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.product_name <=", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameLike(String value) {
            addCriterion("purchaseCollectGoods.product_name like", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameNotLike(String value) {
            addCriterion("purchaseCollectGoods.product_name not like", value, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameIn(List<String> values) {
            addCriterion("purchaseCollectGoods.product_name in", values, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameNotIn(List<String> values) {
            addCriterion("purchaseCollectGoods.product_name not in", values, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.product_name between", value1, value2, "productName");
            return (Criteria) this;
        }

        public Criteria andProductNameNotBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.product_name not between", value1, value2, "productName");
            return (Criteria) this;
        }

        public Criteria andWaitCountIsNull() {
            addCriterion("purchaseCollectGoods.wait_count is null");
            return (Criteria) this;
        }

        public Criteria andWaitCountIsNotNull() {
            addCriterion("purchaseCollectGoods.wait_count is not null");
            return (Criteria) this;
        }

        public Criteria andWaitCountEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.wait_count =", value, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountNotEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.wait_count <>", value, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountGreaterThan(Integer value) {
            addCriterion("purchaseCollectGoods.wait_count >", value, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.wait_count >=", value, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountLessThan(Integer value) {
            addCriterion("purchaseCollectGoods.wait_count <", value, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.wait_count <=", value, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.wait_count in", values, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountNotIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.wait_count not in", values, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.wait_count between", value1, value2, "waitCount");
            return (Criteria) this;
        }

        public Criteria andWaitCountNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.wait_count not between", value1, value2, "waitCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountIsNull() {
            addCriterion("purchaseCollectGoods.already_count is null");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountIsNotNull() {
            addCriterion("purchaseCollectGoods.already_count is not null");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.already_count =", value, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountNotEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.already_count <>", value, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountGreaterThan(Integer value) {
            addCriterion("purchaseCollectGoods.already_count >", value, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.already_count >=", value, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountLessThan(Integer value) {
            addCriterion("purchaseCollectGoods.already_count <", value, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.already_count <=", value, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.already_count in", values, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountNotIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.already_count not in", values, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.already_count between", value1, value2, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andAlreadyCountNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.already_count not between", value1, value2, "alreadyCount");
            return (Criteria) this;
        }

        public Criteria andUnitIsNull() {
            addCriterion("purchaseCollectGoods.unit is null");
            return (Criteria) this;
        }

        public Criteria andUnitIsNotNull() {
            addCriterion("purchaseCollectGoods.unit is not null");
            return (Criteria) this;
        }

        public Criteria andUnitEqualTo(String value) {
            addCriterion("purchaseCollectGoods.unit =", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotEqualTo(String value) {
            addCriterion("purchaseCollectGoods.unit <>", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThan(String value) {
            addCriterion("purchaseCollectGoods.unit >", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.unit >=", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitLessThan(String value) {
            addCriterion("purchaseCollectGoods.unit <", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitLessThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.unit <=", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitLike(String value) {
            addCriterion("purchaseCollectGoods.unit like", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotLike(String value) {
            addCriterion("purchaseCollectGoods.unit not like", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitIn(List<String> values) {
            addCriterion("purchaseCollectGoods.unit in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotIn(List<String> values) {
            addCriterion("purchaseCollectGoods.unit not in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.unit between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.unit not between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("purchaseCollectGoods.price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("purchaseCollectGoods.price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("purchaseCollectGoods.price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("purchaseCollectGoods.price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("purchaseCollectGoods.price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("purchaseCollectGoods.price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("purchaseCollectGoods.price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("purchaseCollectGoods.price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("purchaseCollectGoods.price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("purchaseCollectGoods.price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("purchaseCollectGoods.price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("purchaseCollectGoods.price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andDiscountIsNull() {
            addCriterion("purchaseCollectGoods.discount is null");
            return (Criteria) this;
        }

        public Criteria andDiscountIsNotNull() {
            addCriterion("purchaseCollectGoods.discount is not null");
            return (Criteria) this;
        }

        public Criteria andDiscountEqualTo(Double value) {
            addCriterion("purchaseCollectGoods.discount =", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotEqualTo(Double value) {
            addCriterion("purchaseCollectGoods.discount <>", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountGreaterThan(Double value) {
            addCriterion("purchaseCollectGoods.discount >", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountGreaterThanOrEqualTo(Double value) {
            addCriterion("purchaseCollectGoods.discount >=", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountLessThan(Double value) {
            addCriterion("purchaseCollectGoods.discount <", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountLessThanOrEqualTo(Double value) {
            addCriterion("purchaseCollectGoods.discount <=", value, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountIn(List<Double> values) {
            addCriterion("purchaseCollectGoods.discount in", values, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotIn(List<Double> values) {
            addCriterion("purchaseCollectGoods.discount not in", values, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountBetween(Double value1, Double value2) {
            addCriterion("purchaseCollectGoods.discount between", value1, value2, "discount");
            return (Criteria) this;
        }

        public Criteria andDiscountNotBetween(Double value1, Double value2) {
            addCriterion("purchaseCollectGoods.discount not between", value1, value2, "discount");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelIsNull() {
            addCriterion("purchaseCollectGoods.entry_personnel is null");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelIsNotNull() {
            addCriterion("purchaseCollectGoods.entry_personnel is not null");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelEqualTo(String value) {
            addCriterion("purchaseCollectGoods.entry_personnel =", value, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelNotEqualTo(String value) {
            addCriterion("purchaseCollectGoods.entry_personnel <>", value, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelGreaterThan(String value) {
            addCriterion("purchaseCollectGoods.entry_personnel >", value, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelGreaterThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.entry_personnel >=", value, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelLessThan(String value) {
            addCriterion("purchaseCollectGoods.entry_personnel <", value, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelLessThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.entry_personnel <=", value, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelLike(String value) {
            addCriterion("purchaseCollectGoods.entry_personnel like", value, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelNotLike(String value) {
            addCriterion("purchaseCollectGoods.entry_personnel not like", value, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelIn(List<String> values) {
            addCriterion("purchaseCollectGoods.entry_personnel in", values, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelNotIn(List<String> values) {
            addCriterion("purchaseCollectGoods.entry_personnel not in", values, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.entry_personnel between", value1, value2, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelNotBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.entry_personnel not between", value1, value2, "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andFinishTimeIsNull() {
            addCriterion("purchaseCollectGoods.finish_time is null");
            return (Criteria) this;
        }

        public Criteria andFinishTimeIsNotNull() {
            addCriterion("purchaseCollectGoods.finish_time is not null");
            return (Criteria) this;
        }

        public Criteria andFinishTimeEqualTo(Date value) {
            addCriterion("purchaseCollectGoods.finish_time =", value, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeNotEqualTo(Date value) {
            addCriterion("purchaseCollectGoods.finish_time <>", value, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeGreaterThan(Date value) {
            addCriterion("purchaseCollectGoods.finish_time >", value, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("purchaseCollectGoods.finish_time >=", value, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeLessThan(Date value) {
            addCriterion("purchaseCollectGoods.finish_time <", value, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeLessThanOrEqualTo(Date value) {
            addCriterion("purchaseCollectGoods.finish_time <=", value, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeIn(List<Date> values) {
            addCriterion("purchaseCollectGoods.finish_time in", values, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeNotIn(List<Date> values) {
            addCriterion("purchaseCollectGoods.finish_time not in", values, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeBetween(Date value1, Date value2) {
            addCriterion("purchaseCollectGoods.finish_time between", value1, value2, "finishTime");
            return (Criteria) this;
        }

        public Criteria andFinishTimeNotBetween(Date value1, Date value2) {
            addCriterion("purchaseCollectGoods.finish_time not between", value1, value2, "finishTime");
            return (Criteria) this;
        }

        public Criteria andObjectNameIsNull() {
            addCriterion("purchaseCollectGoods.object_name is null");
            return (Criteria) this;
        }

        public Criteria andObjectNameIsNotNull() {
            addCriterion("purchaseCollectGoods.object_name is not null");
            return (Criteria) this;
        }

        public Criteria andObjectNameEqualTo(String value) {
            addCriterion("purchaseCollectGoods.object_name =", value, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameNotEqualTo(String value) {
            addCriterion("purchaseCollectGoods.object_name <>", value, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameGreaterThan(String value) {
            addCriterion("purchaseCollectGoods.object_name >", value, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameGreaterThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.object_name >=", value, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameLessThan(String value) {
            addCriterion("purchaseCollectGoods.object_name <", value, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameLessThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.object_name <=", value, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameLike(String value) {
            addCriterion("purchaseCollectGoods.object_name like", value, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameNotLike(String value) {
            addCriterion("purchaseCollectGoods.object_name not like", value, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameIn(List<String> values) {
            addCriterion("purchaseCollectGoods.object_name in", values, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameNotIn(List<String> values) {
            addCriterion("purchaseCollectGoods.object_name not in", values, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.object_name between", value1, value2, "objectName");
            return (Criteria) this;
        }

        public Criteria andObjectNameNotBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.object_name not between", value1, value2, "objectName");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("purchaseCollectGoods.status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("purchaseCollectGoods.status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("purchaseCollectGoods.status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("purchaseCollectGoods.status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andEntryTimeIsNull() {
            addCriterion("purchaseCollectGoods.entry_time is null");
            return (Criteria) this;
        }

        public Criteria andEntryTimeIsNotNull() {
            addCriterion("purchaseCollectGoods.entry_time is not null");
            return (Criteria) this;
        }

        public Criteria andEntryTimeEqualTo(Date value) {
            addCriterion("purchaseCollectGoods.entry_time =", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeNotEqualTo(Date value) {
            addCriterion("purchaseCollectGoods.entry_time <>", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeGreaterThan(Date value) {
            addCriterion("purchaseCollectGoods.entry_time >", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("purchaseCollectGoods.entry_time >=", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeLessThan(Date value) {
            addCriterion("purchaseCollectGoods.entry_time <", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeLessThanOrEqualTo(Date value) {
            addCriterion("purchaseCollectGoods.entry_time <=", value, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeIn(List<Date> values) {
            addCriterion("purchaseCollectGoods.entry_time in", values, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeNotIn(List<Date> values) {
            addCriterion("purchaseCollectGoods.entry_time not in", values, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeBetween(Date value1, Date value2) {
            addCriterion("purchaseCollectGoods.entry_time between", value1, value2, "entryTime");
            return (Criteria) this;
        }

        public Criteria andEntryTimeNotBetween(Date value1, Date value2) {
            addCriterion("purchaseCollectGoods.entry_time not between", value1, value2, "entryTime");
            return (Criteria) this;
        }

        public Criteria andSkuIsNull() {
            addCriterion("purchaseCollectGoods.sku is null");
            return (Criteria) this;
        }

        public Criteria andSkuIsNotNull() {
            addCriterion("purchaseCollectGoods.sku is not null");
            return (Criteria) this;
        }

        public Criteria andSkuEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.sku =", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuNotEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.sku <>", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuGreaterThan(Integer value) {
            addCriterion("purchaseCollectGoods.sku >", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.sku >=", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuLessThan(Integer value) {
            addCriterion("purchaseCollectGoods.sku <", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseCollectGoods.sku <=", value, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.sku in", values, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuNotIn(List<Integer> values) {
            addCriterion("purchaseCollectGoods.sku not in", values, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.sku between", value1, value2, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseCollectGoods.sku not between", value1, value2, "sku");
            return (Criteria) this;
        }

        public Criteria andSkuNameIsNull() {
            addCriterion("purchaseCollectGoods.sku_name is null");
            return (Criteria) this;
        }

        public Criteria andSkuNameIsNotNull() {
            addCriterion("purchaseCollectGoods.sku_name is not null");
            return (Criteria) this;
        }

        public Criteria andSkuNameEqualTo(String value) {
            addCriterion("purchaseCollectGoods.sku_name =", value, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameNotEqualTo(String value) {
            addCriterion("purchaseCollectGoods.sku_name <>", value, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameGreaterThan(String value) {
            addCriterion("purchaseCollectGoods.sku_name >", value, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameGreaterThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.sku_name >=", value, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameLessThan(String value) {
            addCriterion("purchaseCollectGoods.sku_name <", value, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameLessThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.sku_name <=", value, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameLike(String value) {
            addCriterion("purchaseCollectGoods.sku_name like", value, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameNotLike(String value) {
            addCriterion("purchaseCollectGoods.sku_name not like", value, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameIn(List<String> values) {
            addCriterion("purchaseCollectGoods.sku_name in", values, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameNotIn(List<String> values) {
            addCriterion("purchaseCollectGoods.sku_name not in", values, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.sku_name between", value1, value2, "skuName");
            return (Criteria) this;
        }

        public Criteria andSkuNameNotBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.sku_name not between", value1, value2, "skuName");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("purchaseCollectGoods.remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("purchaseCollectGoods.remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("purchaseCollectGoods.remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("purchaseCollectGoods.remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("purchaseCollectGoods.remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("purchaseCollectGoods.remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("purchaseCollectGoods.remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("purchaseCollectGoods.remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("purchaseCollectGoods.remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("purchaseCollectGoods.remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("purchaseCollectGoods.remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("purchaseCollectGoods.remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andProductNameLikeInsensitive(String value) {
            addCriterion("upper(purchaseCollectGoods.product_name) like", value.toUpperCase(), "productName");
            return (Criteria) this;
        }

        public Criteria andUnitLikeInsensitive(String value) {
            addCriterion("upper(purchaseCollectGoods.unit) like", value.toUpperCase(), "unit");
            return (Criteria) this;
        }

        public Criteria andEntryPersonnelLikeInsensitive(String value) {
            addCriterion("upper(purchaseCollectGoods.entry_personnel) like", value.toUpperCase(), "entryPersonnel");
            return (Criteria) this;
        }

        public Criteria andObjectNameLikeInsensitive(String value) {
            addCriterion("upper(purchaseCollectGoods.object_name) like", value.toUpperCase(), "objectName");
            return (Criteria) this;
        }

        public Criteria andSkuNameLikeInsensitive(String value) {
            addCriterion("upper(purchaseCollectGoods.sku_name) like", value.toUpperCase(), "skuName");
            return (Criteria) this;
        }

        public Criteria andRemarkLikeInsensitive(String value) {
            addCriterion("upper(purchaseCollectGoods.remark) like", value.toUpperCase(), "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 09 15:38:21 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchase_collect_goods
     *
     * @mbggenerated Thu Aug 09 15:38:21 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}