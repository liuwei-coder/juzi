package com.jzfq.retail.bean.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PurchaseApprovalRecordQuery {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public PurchaseApprovalRecordQuery() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("purchaseApprovalRecord.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("purchaseApprovalRecord.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("purchaseApprovalRecord.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("purchaseApprovalRecord.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("purchaseApprovalRecord.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("purchaseApprovalRecord.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("purchaseApprovalRecord.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseApprovalRecord.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdIsNull() {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id is null");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdIsNotNull() {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id is not null");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id =", value, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdNotEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id <>", value, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdGreaterThan(Integer value) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id >", value, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id >=", value, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdLessThan(Integer value) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id <", value, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id <=", value, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdIn(List<Integer> values) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id in", values, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdNotIn(List<Integer> values) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id not in", values, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdBetween(Integer value1, Integer value2) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id between", value1, value2, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andPurchaseApplyOrderIdNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseApprovalRecord.purchase_apply_order_id not between", value1, value2, "purchaseApplyOrderId");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusIsNull() {
            addCriterion("purchaseApprovalRecord.approval_status is null");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusIsNotNull() {
            addCriterion("purchaseApprovalRecord.approval_status is not null");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.approval_status =", value, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusNotEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.approval_status <>", value, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusGreaterThan(Integer value) {
            addCriterion("purchaseApprovalRecord.approval_status >", value, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.approval_status >=", value, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusLessThan(Integer value) {
            addCriterion("purchaseApprovalRecord.approval_status <", value, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusLessThanOrEqualTo(Integer value) {
            addCriterion("purchaseApprovalRecord.approval_status <=", value, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusIn(List<Integer> values) {
            addCriterion("purchaseApprovalRecord.approval_status in", values, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusNotIn(List<Integer> values) {
            addCriterion("purchaseApprovalRecord.approval_status not in", values, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusBetween(Integer value1, Integer value2) {
            addCriterion("purchaseApprovalRecord.approval_status between", value1, value2, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("purchaseApprovalRecord.approval_status not between", value1, value2, "approvalStatus");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonIsNull() {
            addCriterion("purchaseApprovalRecord.approval_person is null");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonIsNotNull() {
            addCriterion("purchaseApprovalRecord.approval_person is not null");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonEqualTo(String value) {
            addCriterion("purchaseApprovalRecord.approval_person =", value, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonNotEqualTo(String value) {
            addCriterion("purchaseApprovalRecord.approval_person <>", value, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonGreaterThan(String value) {
            addCriterion("purchaseApprovalRecord.approval_person >", value, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonGreaterThanOrEqualTo(String value) {
            addCriterion("purchaseApprovalRecord.approval_person >=", value, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonLessThan(String value) {
            addCriterion("purchaseApprovalRecord.approval_person <", value, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonLessThanOrEqualTo(String value) {
            addCriterion("purchaseApprovalRecord.approval_person <=", value, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonLike(String value) {
            addCriterion("purchaseApprovalRecord.approval_person like", value, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonNotLike(String value) {
            addCriterion("purchaseApprovalRecord.approval_person not like", value, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonIn(List<String> values) {
            addCriterion("purchaseApprovalRecord.approval_person in", values, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonNotIn(List<String> values) {
            addCriterion("purchaseApprovalRecord.approval_person not in", values, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonBetween(String value1, String value2) {
            addCriterion("purchaseApprovalRecord.approval_person between", value1, value2, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonNotBetween(String value1, String value2) {
            addCriterion("purchaseApprovalRecord.approval_person not between", value1, value2, "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeIsNull() {
            addCriterion("purchaseApprovalRecord.approval_time is null");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeIsNotNull() {
            addCriterion("purchaseApprovalRecord.approval_time is not null");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeEqualTo(Date value) {
            addCriterion("purchaseApprovalRecord.approval_time =", value, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeNotEqualTo(Date value) {
            addCriterion("purchaseApprovalRecord.approval_time <>", value, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeGreaterThan(Date value) {
            addCriterion("purchaseApprovalRecord.approval_time >", value, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("purchaseApprovalRecord.approval_time >=", value, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeLessThan(Date value) {
            addCriterion("purchaseApprovalRecord.approval_time <", value, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeLessThanOrEqualTo(Date value) {
            addCriterion("purchaseApprovalRecord.approval_time <=", value, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeIn(List<Date> values) {
            addCriterion("purchaseApprovalRecord.approval_time in", values, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeNotIn(List<Date> values) {
            addCriterion("purchaseApprovalRecord.approval_time not in", values, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeBetween(Date value1, Date value2) {
            addCriterion("purchaseApprovalRecord.approval_time between", value1, value2, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andApprovalTimeNotBetween(Date value1, Date value2) {
            addCriterion("purchaseApprovalRecord.approval_time not between", value1, value2, "approvalTime");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("purchaseApprovalRecord.remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("purchaseApprovalRecord.remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("purchaseApprovalRecord.remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("purchaseApprovalRecord.remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("purchaseApprovalRecord.remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("purchaseApprovalRecord.remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("purchaseApprovalRecord.remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("purchaseApprovalRecord.remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("purchaseApprovalRecord.remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("purchaseApprovalRecord.remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("purchaseApprovalRecord.remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("purchaseApprovalRecord.remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("purchaseApprovalRecord.remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("purchaseApprovalRecord.remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andApprovalPersonLikeInsensitive(String value) {
            addCriterion("upper(purchaseApprovalRecord.approval_person) like", value.toUpperCase(), "approvalPerson");
            return (Criteria) this;
        }

        public Criteria andRemarkLikeInsensitive(String value) {
            addCriterion("upper(purchaseApprovalRecord.remark) like", value.toUpperCase(), "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchase_approval_record
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 01 20:29:09 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchase_approval_record
     *
     * @mbggenerated Wed Aug 01 20:29:09 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}