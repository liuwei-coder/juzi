package com.jzfq.retail.bean.domain;

import java.util.ArrayList;
import java.util.List;

public class StockStatusQuery {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public StockStatusQuery() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("stockStatus.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("stockStatus.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("stockStatus.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("stockStatus.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("stockStatus.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("stockStatus.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("stockStatus.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("stockStatus.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("stockStatus.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("stockStatus.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("stockStatus.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("stockStatus.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("stockStatus.code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("stockStatus.code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("stockStatus.code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("stockStatus.code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("stockStatus.code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("stockStatus.code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("stockStatus.code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("stockStatus.code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("stockStatus.code like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("stockStatus.code not like", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("stockStatus.code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("stockStatus.code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("stockStatus.code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("stockStatus.code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andIsAvailableIsNull() {
            addCriterion("stockStatus.is_available is null");
            return (Criteria) this;
        }

        public Criteria andIsAvailableIsNotNull() {
            addCriterion("stockStatus.is_available is not null");
            return (Criteria) this;
        }

        public Criteria andIsAvailableEqualTo(Boolean value) {
            addCriterion("stockStatus.is_available =", value, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableNotEqualTo(Boolean value) {
            addCriterion("stockStatus.is_available <>", value, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableGreaterThan(Boolean value) {
            addCriterion("stockStatus.is_available >", value, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableGreaterThanOrEqualTo(Boolean value) {
            addCriterion("stockStatus.is_available >=", value, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableLessThan(Boolean value) {
            addCriterion("stockStatus.is_available <", value, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableLessThanOrEqualTo(Boolean value) {
            addCriterion("stockStatus.is_available <=", value, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableIn(List<Boolean> values) {
            addCriterion("stockStatus.is_available in", values, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableNotIn(List<Boolean> values) {
            addCriterion("stockStatus.is_available not in", values, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableBetween(Boolean value1, Boolean value2) {
            addCriterion("stockStatus.is_available between", value1, value2, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsAvailableNotBetween(Boolean value1, Boolean value2) {
            addCriterion("stockStatus.is_available not between", value1, value2, "isAvailable");
            return (Criteria) this;
        }

        public Criteria andIsMovableIsNull() {
            addCriterion("stockStatus.is_movable is null");
            return (Criteria) this;
        }

        public Criteria andIsMovableIsNotNull() {
            addCriterion("stockStatus.is_movable is not null");
            return (Criteria) this;
        }

        public Criteria andIsMovableEqualTo(Boolean value) {
            addCriterion("stockStatus.is_movable =", value, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableNotEqualTo(Boolean value) {
            addCriterion("stockStatus.is_movable <>", value, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableGreaterThan(Boolean value) {
            addCriterion("stockStatus.is_movable >", value, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableGreaterThanOrEqualTo(Boolean value) {
            addCriterion("stockStatus.is_movable >=", value, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableLessThan(Boolean value) {
            addCriterion("stockStatus.is_movable <", value, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableLessThanOrEqualTo(Boolean value) {
            addCriterion("stockStatus.is_movable <=", value, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableIn(List<Boolean> values) {
            addCriterion("stockStatus.is_movable in", values, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableNotIn(List<Boolean> values) {
            addCriterion("stockStatus.is_movable not in", values, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableBetween(Boolean value1, Boolean value2) {
            addCriterion("stockStatus.is_movable between", value1, value2, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsMovableNotBetween(Boolean value1, Boolean value2) {
            addCriterion("stockStatus.is_movable not between", value1, value2, "isMovable");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveIsNull() {
            addCriterion("stockStatus.is_excessive is null");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveIsNotNull() {
            addCriterion("stockStatus.is_excessive is not null");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveEqualTo(Boolean value) {
            addCriterion("stockStatus.is_excessive =", value, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveNotEqualTo(Boolean value) {
            addCriterion("stockStatus.is_excessive <>", value, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveGreaterThan(Boolean value) {
            addCriterion("stockStatus.is_excessive >", value, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveGreaterThanOrEqualTo(Boolean value) {
            addCriterion("stockStatus.is_excessive >=", value, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveLessThan(Boolean value) {
            addCriterion("stockStatus.is_excessive <", value, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveLessThanOrEqualTo(Boolean value) {
            addCriterion("stockStatus.is_excessive <=", value, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveIn(List<Boolean> values) {
            addCriterion("stockStatus.is_excessive in", values, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveNotIn(List<Boolean> values) {
            addCriterion("stockStatus.is_excessive not in", values, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveBetween(Boolean value1, Boolean value2) {
            addCriterion("stockStatus.is_excessive between", value1, value2, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andIsExcessiveNotBetween(Boolean value1, Boolean value2) {
            addCriterion("stockStatus.is_excessive not between", value1, value2, "isExcessive");
            return (Criteria) this;
        }

        public Criteria andCodeLikeInsensitive(String value) {
            addCriterion("upper(stockStatus.code) like", value.toUpperCase(), "code");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_status
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 02 14:59:40 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_status
     *
     * @mbggenerated Thu Aug 02 14:59:40 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}